/*------------------------------------*\
  #GENERIC
\*------------------------------------*/

/* Set defaults like Normalize.css and border-sizing. */

@import "html5doctor-reset.css";
@import "homepage-articlepage_imports.css";

:root {
  box-sizing: border-box;
}

* {
  list-style-type: none;
}



/*------------------------------------*\
  #SETTINGS
\*------------------------------------*/

/* Global...............Globally-available variables and config. */


/* SET BASE PARAMETERS */

/* Base Units */
:root {
  /* set REM size */
  font-size: 18px;
  /* set base unit for modular grid */
  --grid-unit: 6px;
}

/* Base Colours */
:root {
  --brand-colour: hsla(49,100%,100%,1); /* Tyee Orange.                 */
    --brand-colour__hue: 49;            /* HSLA values are broken into  */
    --brand-colour__sat: 100%;          /* separate variables for       */
    --brand-colour__lig: 100%;          /* computational manipulation   */
    --brand-colour__alp: 1;             /* in Colour System below.      */
  --link-colour: yellow;
}

/* Responsive Settings */
/* CSS variables can't be used within media query selectors, so these responsive settings are for reference only. */
/* If we want to use CSS variables to create a layout grid that responds to viewport dimensions then we could set the grid properties via a variable and set that variable relative to the viewport dimension.
Simple examples:
    --column-gutter: calc(5vw+10px);

    .container {
      grid-column-gap:var(--column-gutter);
    }

    --col-grid-main: 1fr 1fr;
    @media screen and (min-width: 1368px) { --col-grid-main: 2fr 1fr 1fr 1fr; }

    .hmpg-org-recent-stories__top-stories {
        grid-template-columns: var(--col-grid-main);
      }
 */
/* :root {
  breakpoint-width-xs: 0;
  breakpoint-width-s: 0;
  breakpoint-width-m: 684px;
  breakpoint-width-l: 1368px;
  breakpoint-width-xl: 1368px;
}
*/




/*------------------------------------*\
  #SYSTEMS
\*------------------------------------*/

/* Design system styles are derived computationally from the base parameters. */


/* COLOUR SYSTEM */
/* Use the Base Colours to derive a colour system.
Use the HSLA colorspec with each of the 4 values set by a separate variable. Then perform computations on those variables to change the colour.
https://www.w3.org/TR/css-color-3/#hsl-color
https://www.w3schools.com/cssref/func_hsla.asp
https://caniuse.com/#feat=css3-colors
*/


/* MODULAR SCALE */
/* Use the Base Parameters to derive a modular scale. */



/* TYPOGRAPHY SYSTEM */
/* Use the Modular Scale to derive a typescale. */



/* GRID SYSTEM */
/* Use the Modular Scale to derive a modular grid. */

:root {
  /* standard column gutter width */
  --gutter-column: calc(var(--grid-unit) * 5);
  /* use half of gutter width when column borders are required */
  --gutter-column-half: calc(var(--gutter-column) / 2);
  /* standard row gutter width */
  --gutter-row: calc(var(--grid-unit) * 8);
  /* use half of gutter width when row borders are required */
  --gutter-row-half: calc(var(--gutter-row) / 2);
}

    /* >> Use pseudo element :after to create the column borders */




/*------------------------------------*\
  #FONTS
\*------------------------------------*/

@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,400italic,600,600italic,700,700italic,900,900italic,300,300italic);




/*------------------------------------*\
  #MOLECULES
\*------------------------------------*/

/* STORY ITEM molecule */

.story-item--index-page {
    position: relative;
}


/* HMPG AD BOX molecule */

.hmpg-ad-box {
  position: relative;
}

  .hmpg-ad-box--halfpage {
  }

  .hmpg-ad-box iframe {
    /* width:100%; This prevents the ad from breaking the col but it will get crops the graphic */
  }

  /* Towards a scaling ad solution: */
  .hmpg-ad-box--halfpage iframe {
    /*
    position: absolute;   --> This pulls ad out of flow and lets grid col size properly
    top:0;
    left:0;
    transform: scale(.8) translate(-55px, -75px);  --> translations must be calculated relative grid col size depending on viewport width
    */
  }




/*------------------------------------*\
  #ORGANISMS
\*------------------------------------*/

/* HMPG ORGANISM WRAPPER */

.hmpg-org-wrapper {
  padding: 0 var(--gutter-column-half);
}


/* HMPG RECENT STORIES organism */

.hmpg-org-recent-stories__list {
      /* AG -- might want to abstract universal grid specs to "".hmpg-org-wrapper >" */
  width: 100%;
  display: grid;
  grid-column-gap: var(--gutter-column);
  grid-row-gap: var(--gutter-row);
}

  /* Recent Stories list expander */
  /* https://stackoverflow.com/questions/40312901/showing-and-hiding-something-with-pure-css-with-show-and-hide-button */
  #hmpg-org-recent-stories__list-more {
      display: none;
  }
  #show--recent-stories:target #hmpg-org-recent-stories__list-more {
      display: inline-block;
  }
  #show--recent-stories:target #show--recent-stories {
      display: none;
  }

  /* Recent Stories responsive rules */

      /* old span version
      @media screen and (min-width: 1368px) {

        .hmpg-org-recent-stories__top-stories {
          grid-template-columns: 1fr 1fr 1fr 1fr;
        }

            .hmpg-org-recent-stories__top-stories :first-child {
            grid-column: span 3;
            }

            .hmpg-org-recent-stories__top-stories .hmpg-ad-box--halfpage {
              grid-column: 4;
              grid-row: 1;
            }
      }
      */

  @media screen and (min-width: 1368px) {

    .hmpg-org-recent-stories__list {
      grid-template-columns: repeat(4, 1fr);
      grid-template-areas:
        "primary primary primary ad"
        "2ndary  2ndary  2ndary  ad";
    }

        .hmpg-org-recent-stories__main :first-child {
        grid-area: primary;
        }

        .hmpg-org-recent-stories__main .hmpg-ad-box--halfpage {
          grid-area: ad;
        }
  }

/* end of Recent Stories */


/* TYEE INSIDER organism */

/* AG -- It would be great to use subgrids to keep molecules separated yet aligned, but the subgrid spec isn't completed yet and no browsers support it. The display: content also has very poor support so that's not viable either. */




/*------------------------------------*\
  #HELPER CLASSES
\*------------------------------------*/

/*  RESPONSIVE IMAGES -- forces the image to be the same width as its parent
    element. Confusingly similar in name to Bootstrap's .img-responsive but this
    will actually stretch an image rather than merely shrink it. */
.responsive-img {
  width: 100%;
  height: auto;
  display: block;
}
