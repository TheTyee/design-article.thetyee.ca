/*-----------------------------------------*\
  #GENERIC
\*-----------------------------------------*/

/* Set defaults like Normalize.css and border-sizing. */

@import "html5doctor-reset.css";
@import "homepage-articlepage_imports.css";

:root {
  box-sizing: border-box;
}

* {
  list-style-type: none;
}



/*-----------------------------------------*\
  #SETTINGS
\*-----------------------------------------*/

/* Global...............Globally-available variables and config. */


/* SET BASE PARAMETERS */

/* Base Units */
:root {
  /* set REM size */
  font-size: 18px;
  /* set base unit for modular grid */
  --grid-unit: 6px;
}

/* Base Colours */
:root {
  /* BRAND COLOUR -- Tyee Orange.                                    */
  --brand-colour__hue: 49;           /* HSLA values are broken into  */
  --brand-colour__sat: 100%;         /* separate variables for       */
  --brand-colour__lig: 50%;          /* computational manipulation   */
  --brand-colour__alp: 1;            /* in Colour System below.      */
        /* Set --brand-colour variable based on HSLA variables */
        --brand-colour: hsla(var(--brand-colour__hue),var(--brand-colour__sat),var(--brand-colour__lig),var(--brand-colour__alp));

  --link-colour: yellow;
}

/* Responsive Settings */
/* CSS variables can't be used within media query selectors, so these responsive settings are for reference only. */
/* If we want to use CSS variables to create a layout grid that responds to viewport dimensions then we could set the grid properties via a variable and set that variable relative to the viewport dimension.
Simple examples:
    --column-gutter: calc(5vw+10px);

    .container {
      grid-column-gap:var(--column-gutter);
    }

    --col-grid-main: 1fr 1fr;
    @media screen and (min-width: 1368px) { --col-grid-main: 2fr 1fr 1fr 1fr; }

    .hmpg-org-recent-stories__top-stories {
        grid-template-columns: var(--col-grid-main);
      }
 */
/* :root {
  breakpoint-width-xs: 0;
  breakpoint-width-s: 0;
  breakpoint-width-m: 684px;
  breakpoint-width-l: 1368px;
  breakpoint-width-xl: 1368px;
}
*/




/*-----------------------------------------*\
  #SYSTEMS
\*-----------------------------------------*/

/* Design system styles are derived computationally from the base parameters. */


/* COLOUR SYSTEM */
/* Use the Base Colours to derive a colour system.
Use the HSLA colorspec with each of the 4 values set by a separate variable. Then perform computations on those variables to change the colour.
https://www.w3.org/TR/css-color-3/#hsl-color
https://www.w3schools.com/cssref/func_hsla.asp
https://caniuse.com/#feat=css3-colors
*/

    /* BRAND BACKGROUND COLOUR */
    /* Brand colour is lightened for use in module backgrounds */
    :root {
      --brand-colour--mod-bg:
          hsla(
            var(--brand-colour__hue),
            var(--brand-colour__sat),
            calc(var(--brand-colour__lig)*1.34), /* lightens brand colour */
            var(--brand-colour__alp)
          );
    }


/* MODULAR SCALE */
/* Use the Base Parameters to derive a modular scale. */



/* TYPOGRAPHY SYSTEM */
/* Use the Modular Scale to derive a typescale. */

/* Base Units */
:root {
  /* Scale down text for tertiary components (e.g. .story-item--tertiary) */
  --small-text: 0.8rem;
}


/* GRID SYSTEM */
/* Uses the Modular Scale to derive a modular grid. */

:root {
  /* standard column gutter width */
  --gutter-column: calc(var(--grid-unit) * 5);
  /* use half of gutter width when column borders are required */
  --gutter-column-half: calc(var(--gutter-column) / 2);
  /* standard row gutter width */
  --gutter-row: calc(var(--grid-unit) * 8);
  /* use half of gutter width when row borders are required */
  --gutter-row-half: calc(var(--gutter-row) / 2);
}

    /* >> Use pseudo element :after to create the column borders */




/*-----------------------------------------*\
  #FONTS
\*-----------------------------------------*/

@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro:400,400italic,600,600italic,700,700italic,900,900italic,300,300italic);




/*-----------------------------------------*\
  #ATOMS
\*-----------------------------------------*/

/* BUTTON atom */

.button {
  -webkit-appearance: button;
  -moz-appearance: button;
  appearance: button;
  cursor: pointer;
}

  /* BUTTON EXPANDER is used to show and hide content */
  .button--expander {
    grid-column: 1 / -1; /* Make button span entire grid row */
    justify-self: center;
  }


/* BADGE molecule */
/* This styles the existing story-badge html molecule from the story page to work on the homepage. These styles replace the story page badge styles. */

.badge { }

  .badge--story-item-placement {
    display: block;
    position: absolute;
    width: auto;
    left: -1em;
    top: -1.5em;
    transform: scale(1);
    padding-left: inherit; /* Adjusts badge position when there's padding on the parent (e.g. Bootstrap cols) */
  }




/*-----------------------------------------*\
  #MOLECULES
\*-----------------------------------------*/


/* STORY ITEM MOLECULE ------------------- */

/* default story item grid -- single column  */
.story-item--index-page {
    position: relative;
    display: grid;
    grid-column-gap: var(--gutter-column);
    grid-row-gap: 0;
    grid-template-areas:
        "image"
        "category"
        "headline"
        "deck"
        "author"
        "date";
}

    /* Story Item element layout -- Assign story-item elements to grid areas */
    .story-item--index-page .story-item__image { grid-area: image; }
    .story-item--index-page .badge--story-item-placement { grid-area: image; z-index: 20;}
    .story-item--index-page .category-label { grid-area: category; }
    .story-item--index-page .story-item__headline { grid-area: headline; }
    .story-item--index-page .story-item__deck { grid-area: deck; }
    .story-item--index-page .story-item__author { grid-area: author; }
    .story-item--index-page .story-item__date { grid-area: date; }

    /* STORY ITEM EXTENSIONS */
    .story-item--primary { }

    .story-item--secondary {
      grid-template-columns: 1fr 1fr;
      grid-template-rows: repeat(4, auto) 1fr;
      grid-template-areas:
        "category image"
        "headline image"
        "deck image"
        "author image"
        "date image";
    }

    .story-item--tertiary { font-size: var(--small-text); }
        .story-item--tertiary .story-item__image { display: none; }
        .story-item--tertiary .badge--story-item-placement { display: none; }
        .story-item--tertiary .category-label { display: none; }
        .story-item--tertiary .story-item__headline { display: block; }
        .story-item--tertiary .story-item__deck { display: none; }
        .story-item--tertiary .story-item__author { display: none; }
        .story-item--tertiary .story-item__date { display: none; }

    .story-item—-minimum { font-size: var(--small-text); }
        .story-item—-minimum .story-item__image { display: none; }
        .story-item—-minimum .badge--story-item-placement { display: none; }
        .story-item—-minimum .category-label { display: none; }
        .story-item—-minimum .story-item__headline { display: block; }
        .story-item—-minimum .story-item__deck { display: none; }
        .story-item—-minimum .story-item__author { display: none; }
        .story-item—-minimum .story-item__date { display: none; }

    .story-item--reverse { }


    /* ---- STORY ITEM responsive enhancement ---- */

        /*  STORY ITEM MEDIUM BREAKPOINT -- breakpoint-width-m: 684px */
        @media screen and (min-width: 684px) {

          .story-item--primary {
            grid-template-columns: 1fr 1fr;
            grid-template-rows: repeat(4, auto) 1fr;
            grid-template-areas:
              "category image"
              "headline image"
              "deck image"
              "author image"
              "date image";
          }

              .story-item--primary.story-item--reverse {
                grid-template-columns: 1fr 1fr;
                grid-template-rows: repeat(4, auto) 1fr;
                grid-template-areas:
                  "image category"
                  "image headline"
                  "image deck"
                  "image author"
                  "image date";
              }

          .story-item--secondary {
            grid-template-columns: 1fr;
            grid-template-rows: auto;
            grid-template-areas:
                "image"
                "category"
                "headline"
                "deck"
                "author"
                "date";
          }

          .story-item--tertiary {
            grid-template-columns: 1fr 1fr;
            grid-template-rows: repeat(4, auto) 1fr;
            grid-template-areas:
              "category image"
              "headline image"
              "deck image"
              "author image"
              "date image";
          }
              .story-item--tertiary .story-item__image {display: block;}
              .story-item--tertiary .badge--story-item-placement {display: block;}
              .story-item--tertiary .category-label {display: block;}
              .story-item--tertiary .story-item__deck {display: block;}


        }

/* end of Story Item */


/* HMPG AD BOX MOLECULE ------------------- */

.hmpg-ad-box {
  position: relative;
}

  .hmpg-ad-box--halfpage {
    display: none;
  }

  .hmpg-ad-box iframe {
    /* width:100%; This prevents the ad from breaking the col but it will get crops the graphic */
  }

  /* Towards a scaling ad solution: */
  .hmpg-ad-box--halfpage iframe {
    /*
    position: absolute;   --> This pulls ad out of flow and lets grid col size properly
    top:0;
    left:0;
    transform: scale(.8) translate(-55px, -75px);  --> translations must be calculated relative grid col size depending on viewport width
    */
  }

    /*  HMPG AD BOX LARGE BREAKPOINT -- breakpoint-width-l: 1368px */
    @media screen and (min-width: 1368px) {
      .hmpg-ad-box--halfpage { display: block;}
    }



/*-----------------------------------------*\
  #ORGANISMS
\*-----------------------------------------*/


/* HMPG ORGANISM WRAPPER ----------------- */

.hmpg-org-wrapper {
  padding: 0 var(--gutter-column-half);
}


/* HMPG RECENT STORIES organism ---------- */

.hmpg-org-recent-stories__list {
      /* AG -- might want to abstract universal grid specs to "".hmpg-org-wrapper >" */
  display: grid;
  width: 100%;
  margin-top: var(--gutter-row);
  grid-column-gap: var(--gutter-column);
  grid-row-gap: var(--gutter-row);
}

  /* RECENT STORIES LIST EXPANDER */
  /* This uses a checkbox and labels to toggle the display of content without using javascript. See: https://jsfiddle.net/Algreenwich/uLpzvx4n/36/
  This was adapted from The Checkbox/Label Trick described here: https://javascript.works-hub.com/learn/a-javascript-free-frontend-61275
  An alternative (although less robust) method is to use anchors links:
  https://jsfiddle.net/Algreenwich/uym9s0bg/
  https://stackoverflow.com/questions/40312901/showing-and-hiding-something-with-pure-css-with-show-and-hide-button */

  .button--expander-open ~ :not(script) {
    display: none;
  }

      #expander--recent-stories:checked ~ :not(script) {
        display: grid;   /* This must be "grid" if the revealed items are themselves using internal grid layouts */
      }

      #expander--recent-stories:checked ~ .button--expander-open {
        display: none;
      }



      /* ---- RECENT STORIES responsive enhancement ---- */
      /* Story items are allocated grid space based on the order in which they appear -- i.e. :first-child spans entire row. But their grid areas could also be assigned based on the class of the story-item, e.g. .story-item--primary spans full row. */

          /*  RECENT STORIES MEDIUM BREAKPOINT -- breakpoint-width-m: 684px */
          @media screen and (min-width: 684px) {

            .hmpg-org-recent-stories__list {
              grid-template-columns: repeat(6, 1fr);
              grid-template-areas:
                "primary primary primary primary primary primary"
                "2ndary  2ndary  2ndary 2ndary  2ndary  2ndary";
            }

                .hmpg-org-recent-stories__list > .story-item--primary {
                grid-column: auto / span 6;
                }

                .hmpg-org-recent-stories__list > .story-item--secondary {
                grid-column: auto / span 2;
                }

                .hmpg-org-recent-stories__list > .story-item--tertiary {
                grid-column: auto / span 3;
                }

          }

          /*  RECENT STORIES LARGE BREAKPOINT -- breakpoint-width-l: 1368px */
          @media screen and (min-width: 1368px) {

            .hmpg-org-recent-stories__list {
              grid-template-columns: repeat(4, 1fr);
              grid-template-areas:
                "primary primary primary ad"
                "2ndary  2ndary  2ndary  ad";
            }

                .hmpg-org-recent-stories__list > .story-item--primary {
                grid-area: primary;
                }

                .hmpg-org-recent-stories__list > .story-item--secondary {
                grid-column: auto / span 1;
                }

                .hmpg-org-recent-stories__list > .story-item--tertiary {
                grid-column: auto / span 1;
                }

                .hmpg-org-recent-stories__main .hmpg-ad-box--halfpage {
                  grid-area: ad;
                }
          }

  /* end of Recent Stories */


/* TYEE INSIDER organism ----------------- */
    /* AG -- It would be great to use subgrids to keep molecules separated yet aligned, but the subgrid spec isn't completed yet and no browsers support it. The display: content also has very poor support so that's not viable either. */
.hmpg-org-tyee-insider {
  display: grid;
  width: 100%;
  padding-top: var(--gutter-row);
  grid-column-gap: var(--gutter-column);
  grid-row-gap: var(--gutter-row);

  background-color: var(--brand-colour--mod-bg);
}

  .m-tyee-insider__main .story-item--primary { }
    .m-tyee-insider__main .story-item--primary .badge--story-item-placement
      { display: none;}
    .m-tyee-insider__main .story-item--primary .category-label
      { display: none;}
    .m-tyee-insider__main .story-item--primary .story-item__headline
      { grid-area: headline; }
    .m-tyee-insider__main .story-item--primary .story-item__deck
      { grid-area: deck; }
    .m-tyee-insider__main .story-item--primary .story-item__author
      { display: none;}
    .m-tyee-insider__main .story-item--primary .story-item__date
      { display: none;}

    /* ---- TYEE INSIDER responsive enhancement ---- */

        /*  TYEE INSIDER MEDIUM BREAKPOINT -- breakpoint-width-m: 684px */
        @media screen and (min-width: 684px) {

          .hmpg-org-tyee-insider {
            grid-template-columns: repeat(6, 1fr);
          }
              .hmpg-org-tyee-insider > :first-child {
              grid-column: auto / span 6;
              }
              .hmpg-org-tyee-insider > :nth-child(2) { grid-column: auto / span 3;}
              .hmpg-org-tyee-insider > :nth-child(3) { grid-column: auto / span 3;}
        }

        /*  TYEE INSIDER LARGE BREAKPOINT -- breakpoint-width-l: 1368px */
        @media screen and (min-width: 1368px) {

          .hmpg-org-tyee-insider {
            grid-template-columns: repeat(5, 1fr);
          }
              .hmpg-org-tyee-insider > :first-child {
              grid-column: auto / span 3;
              }
              .hmpg-org-tyee-insider > :nth-child(2) { grid-column: auto / span 1;}
              .hmpg-org-tyee-insider > :nth-child(3) { grid-column: auto / span 1;}
        }
/* End of Tyee Insider organism */


/* PINNED STORY organism ----------------- */

.hmpg-org-pinned-story {
  padding-top: var(--gutter-row); }

/* End of Pinned Story organism */




/*------------------------------------*\
  #HELPER CLASSES
\*------------------------------------*/


/*  RESPONSIVE IMAGES -- forces the image to be the same width as its parent
    element. Confusingly similar in name to Bootstrap's .img-responsive but this
    will actually stretch an image rather than merely shrink it. */
.responsive-img {
  width: 100%;
  height: auto;
  display: block;
}
